{"version":3,"sources":["../src/utils.js"],"names":["getIntLength","unitConverter","isArray","getDECPOS","isObject","hasOneOf","oneOf","prefixInteger","getExplorer","num","dotIndex","indexOf","substring","length","units","dividend","currentNum","currentUnit","i","result","toFixed","unit","obj","Array","Math","ceil","toString","split","Object","prototype","call","target","arr","some","_","value","validList","len","join","slice","ua","window","navigator","userAgent","isExplorer","exp"],"mappings":";;;;;QAKgBA,Y,GAAAA,Y;QAcAC,a,GAAAA,a;QAqBAC,O,GAAAA,O;QASAC,S,GAAAA,S;QASAC,Q,GAAAA,Q;QAUAC,Q,GAAAA,Q;QAUAC,K,GAAAA,K;QAeAC,a,GAAAA,a;QAQAC,W,GAAAA,W;AArGhB;;;;;AAKO,SAASR,YAAT,CAAuBS,GAAvB,EAA4B;AACjCA,QAAM,KAAKA,GAAX;AACA,MAAIC,WAAWD,IAAIE,OAAJ,CAAY,GAAZ,CAAf;AACA,MAAID,aAAa,CAAC,CAAlB,EAAqB;AACnBD,UAAMA,IAAIG,SAAJ,CAAc,CAAd,EAAiBF,QAAjB,CAAN;AACD;AACD,SAAOD,IAAII,MAAX;AACD;;AAED;;;;;AAKO,SAASZ,aAAT,CAAwBQ,GAAxB,EAA6B;AAClC,MAAIK,QAAQ,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,CAAZ;AACA,MAAIC,WAAW,KAAf;AACA,MAAIC,aAAaP,GAAjB;AACA,MAAIQ,cAAcH,MAAM,CAAN,CAAlB;AACA,OAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1BD,kBAAcH,MAAMI,CAAN,CAAd;AACA,QAAIlB,aAAagB,UAAb,IAA2B,CAA/B,EAAkC;AAClCA,iBAAaA,aAAaD,QAA1B;AACD;AACD,MAAII,SAAS,EAAb;AACAA,SAAOV,GAAP,GAAaO,WAAWI,OAAX,CAAmB,CAAnB,CAAb;AACAD,SAAOE,IAAP,GAAcJ,WAAd;AACA,SAAOE,MAAP;AACD;;AAED;;;;;AAKO,SAASjB,OAAT,CAAkBoB,GAAlB,EAAuB;AAC5B,SAAOC,MAAMrB,OAAN,CAAcoB,GAAd,CAAP;AACD;;AAED;;;;;AAKO,SAASnB,SAAT,CAAoBM,GAApB,EAAyB;AAC9B,SAAOe,KAAKC,IAAL,CAAUhB,GAAV,MAAmBA,GAAnB,GAAyB,CAAzB,GAA6BA,IAAIiB,QAAJ,GAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,EAA6Bd,MAAjE;AACD;;AAED;;;;;AAKO,SAAST,QAAT,CAAmBkB,GAAnB,EAAwB;AAC7B,SAAOM,OAAOC,SAAP,CAAiBH,QAAjB,CAA0BI,IAA1B,CAA+BR,GAA/B,MAAwC,iBAA/C;AACD;;AAED;;;;;;AAMO,SAASjB,QAAT,CAAkB0B,MAAlB,EAA0BC,GAA1B,EAA+B;AACpC,SAAOD,OAAOE,IAAP,CAAY;AAAA,WAAKD,IAAIrB,OAAJ,CAAYuB,CAAZ,IAAiB,CAAC,CAAvB;AAAA,GAAZ,CAAP;AACD;;AAED;;;;;;AAMO,SAAS5B,KAAT,CAAe6B,KAAf,EAAsBC,SAAtB,EAAiC;AACtC,SAAOA,UAAUH,IAAV,CAAe,aAAK;AACzB,QAAIE,UAAUD,CAAd,EAAiB;AACf,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GALM,CAAP;AAMD;;AAED;;;;;;AAMO,SAAS3B,aAAT,CAAuB4B,KAAvB,EAA8BE,GAA9B,EAAmC;AACxC,SAAO,CAACd,MAAMc,GAAN,EAAWC,IAAX,CAAgB,CAAhB,IAAqBH,KAAtB,EAA6BI,KAA7B,CAAmC,CAACF,GAApC,CAAP;AACD;;AAED;;;;AAIO,SAAS7B,WAAT,GAAuB;AAC5B,MAAMgC,KAAKC,OAAOC,SAAP,CAAiBC,SAA5B;AACA,MAAIC,aAAa,SAAbA,UAAa,CAACC,GAAD,EAAS;AACxB,WAAOL,GAAG7B,OAAH,CAAWkC,GAAX,IAAkB,CAAC,CAA1B;AACD,GAFD;AAGA,MAAID,WAAW,MAAX,CAAJ,EAAwB,OAAO,MAAP;AACxB,MAAIA,WAAW,QAAX,CAAJ,EAA0B,OAAO,QAAP;AAC1B,MAAIA,WAAW,OAAX,CAAJ,EAAyB,OAAO,OAAP;AACzB,MAAIA,WAAW,QAAX,CAAJ,EAA0B,OAAO,QAAP;AAC3B","file":"utils.js","sourcesContent":["/**\n * @description 获取一个数的整数位数\n * @param {*} num 传递的数字\n * @return {Number} length\n */\nexport function getIntLength (num) {\n  num = '' + num\n  let dotIndex = num.indexOf('.')\n  if (dotIndex !== -1) {\n    num = num.substring(0, dotIndex)\n  }\n  return num.length\n}\n\n/**\n * @description 金额单位转化\n * @param {*} num 传递的金额\n * @return {Number}\n */\nexport function unitConverter (num) {\n  let units = ['元', '万元', '亿', '万亿']\n  let dividend = 10000\n  let currentNum = num\n  let currentUnit = units[0]\n  for (let i = 0; i < 4; i++) {\n    currentUnit = units[i]\n    if (getIntLength(currentNum) < 5) break\n    currentNum = currentNum / dividend\n  }\n  let result = {}\n  result.num = currentNum.toFixed(2)\n  result.unit = currentUnit\n  return result\n}\n\n/**\n * @description 确定传递的值是否为数组\n * @param {*} obj 传递的值\n * @return {Boolean}\n */\nexport function isArray (obj) {\n  return Array.isArray(obj)\n}\n\n/**\n * @description 获取一个数的小数位数\n * @param {*} num 传递的数字\n * @return {Number}\n */\nexport function getDECPOS (num) {\n  return Math.ceil(num) === num ? 0 : num.toString().split('.')[1].length\n}\n\n/**\n * @description 确定传递的值是否为对象\n * @param {*} obj 传递的值\n * @return {Boolean}\n */\nexport function isObject (obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]'\n}\n\n/**\n * @description 判断要查询的数组中至少有一项包含在目标数组中\n * @param {Array} target 目标数组\n * @param {Array} arr 要查询的数组\n * @return {Boolean}\n*/\nexport function hasOneOf(target, arr) {\n  return target.some(_ => arr.indexOf(_) > -1)\n}\n\n/**\n * @description 验证当前值是否存在验证列表中\n * @param {String|Number} value 被验证的值\n * @param {*} validList 验证列表\n * @return {Boolean}\n*/\nexport function oneOf(value, validList) {\n  return validList.some(_ => {\n    if (value === _) {\n      return true\n    }\n    return false\n  })\n}\n\n/**\n * @description 数字前置补领（指定总长度）\n * @param {String|Number} value 需要前置补零的数\n * @param {Number} len 补零后的长度\n * @return {Boolean}\n*/\nexport function prefixInteger(value, len) {\n  return (Array(len).join(0) + value).slice(-len)\n}\n\n/**\n * @description 获取浏览器\b名称\n * @return {String}\n*/\nexport function getExplorer() {\n  const ua = window.navigator.userAgent\n  let isExplorer = (exp) => {\n    return ua.indexOf(exp) > -1\n  }\n  if (isExplorer('MSIE')) return 'MSIE'\n  if (isExplorer('Chrome')) return 'Chrome'\n  if (isExplorer('Opera')) return 'Opera'\n  if (isExplorer('Safari')) return 'Safari'\n}\n"]}